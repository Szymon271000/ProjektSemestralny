// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjektSemestralny.Logika.Data;

namespace ProjektSemestralny.Logika.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20220530173918_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Name = "Mobiles"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Laptops"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Monitors"
                        });
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.CategoryProducent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProducentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProducentId");

                    b.ToTable("CategoryProducents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 10,
                            ProducentId = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 11,
                            ProducentId = 51
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 12,
                            ProducentId = 52
                        });
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryProducentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CategoryProducentId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryProducentId = 1,
                            Description = "Samsung's fastest, most powerful chip ever. That means, a faster CPU and GPU compared to Galaxy S21 Ultra. It’s an epic leap for smartphone technology.",
                            Name = "Galaxy S22 Ultra",
                            Price = 1199.0
                        },
                        new
                        {
                            Id = 2,
                            CategoryProducentId = 2,
                            Description = "Laptop dock for the Motorola ATRIX 4G for a more interactive computer-like experience from your smartphone",
                            Name = "ATRIX 4G",
                            Price = 500.0
                        },
                        new
                        {
                            Id = 3,
                            CategoryProducentId = 3,
                            Description = "6 Models of Entry-level Displays with 4K High-Definition Image Quality.",
                            Name = "TH-75CQ2U 75 4K UHD Professional TV",
                            Price = 0.0
                        });
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Producent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Producents");

                    b.HasData(
                        new
                        {
                            Id = 50,
                            Name = "Samsung"
                        },
                        new
                        {
                            Id = 51,
                            Name = "Motorola"
                        },
                        new
                        {
                            Id = 52,
                            Name = "Panasonic"
                        });
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.CategoryProducent", b =>
                {
                    b.HasOne("ProjektSemestralny.Logika.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjektSemestralny.Logika.Data.Models.Producent", "Producent")
                        .WithMany()
                        .HasForeignKey("ProducentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Producent");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Item", b =>
                {
                    b.HasOne("ProjektSemestralny.Logika.Data.Models.CategoryProducent", "CategoryProducent")
                        .WithMany()
                        .HasForeignKey("CategoryProducentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CategoryProducent");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Order", b =>
                {
                    b.HasOne("ProjektSemestralny.Logika.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.OrderItem", b =>
                {
                    b.HasOne("ProjektSemestralny.Logika.Data.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId");

                    b.HasOne("ProjektSemestralny.Logika.Data.Models.Item", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ProjektSemestralny.Logika.Data.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
